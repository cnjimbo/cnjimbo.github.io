{
  "extensions": {
    "recommendations": [
      "adam-bender.commit-message-editor",
      "alberto-varela.monorepo-focus-workspace",
      "alefragnani.project-manager",
      "alexdima.copy-relative-path",
      "alibaba-cloud.tongyi-lingma",
      "amodio.toggle-excluded-files",
      "antfu.browse-lite",
      "antfu.goto-alias",
      "antfu.icons-carbon",
      "antfu.open-in-github-button",
      "antfu.slidev",
      "antfu.smart-clicks",
      "antfu.unocss",
      "antfu.vite",
      "antfu.where-am-i",
      "atishay-jain.all-autocomplete",
      "bierner.markdown-emoji",
      "bierner.markdown-mermaid",
      "chakrounanas.turbo-console-log",
      "chrisbibby.hide-git-ignored",
      "christian-kohler.npm-intellisense",
      "christian-kohler.path-intellisense",
      "codezombiech.gitignore",
      "dbaeumer.vscode-eslint",
      "devzstudio.emoji-snippets",
      "eamodio.gitlens",
      "ebenezerdon.npm-studio",
      "editorconfig.editorconfig",
      "edwinkofler.vscode-assorted-languages",
      "eliostruyf.vscode-hide-comments",
      "emeraldwalk.runonsave",
      "fabiospampinato.vscode-open-in-github",
      "file-icons.file-icons",
      "folke.vscode-monorepo-workspace",
      "formulahendry.auto-rename-tag",
      "formulahendry.code-runner",
      "github.remotehub",
      "github.vscode-github-actions",
      "github.vscode-pull-request-github",
      "gregorbiswanger.json2ts",
      "hancel.markdown-image",
      "harrydowning.swap-tsconfig",
      "ibm.output-colorizer",
      "ionutvmi.path-autocomplete",
      "jock.svg",
      "johnsoncodehk.vscode-tsconfig-helper",
      "kennylong.kubernetes-yaml-formatter",
      "kricsleo.vscode-package-json-inspector",
      "lacroixdavid1.vscode-format-context-menu",
      "lettucegoblin.vue-vscode-snippets-scripts-first",
      "linbudu.pnpm-vscode-helper",
      "lmcarreiro.vscode-smart-column-indenter",
      "lokalise.i18n-ally",
      "maggie.eslint-rules-zh-plugin",
      "mainawycliffe.view-package-on-npm",
      "metaseed.metago",
      "metaseed.metajump",
      "metaseed.metaword",
      "mhutchie.git-graph",
      "mike-co.import-sorter",
      "mikestead.dotenv",
      "mintlify.document",
      "mpontus.tab-cycle",
      "ms-1es.pull-request-quantifier",
      "ms-vscode-remote.remote-wsl",
      "ms-vscode-remote.remote-wsl-recommender",
      "ms-vscode.azure-repos",
      "ms-vscode.live-server",
      "ms-vscode.powershell",
      "ms-vscode.remote-repositories",
      "ms-vscode.vscode-typescript-next",
      "mulu-github.jsflowchart",
      "mxsdev.typescript-explorer",
      "naumovs.color-highlight",
      "neotan.vscode-auto-restart-typescript-eslint-servers",
      "oouo-diogo-perdigao.docthis",
      "owen-dev.vue3-snippets-plus",
      "peterschmalfeldt.explorer-exclude",
      "pflannery.vscode-versionlens",
      "pmneo.tsimporter",
      "redhat.vscode-yaml",
      "richie5um2.vscode-sort-json",
      "sainnhe.gruvbox-material",
      "sirtori.indenticator",
      "sleistner.vscode-fileutils",
      "steoates.autoimport",
      "stringham.move-ts",
      "thinker.sort-json",
      "tombonnike.vscode-status-bar-format-toggle",
      "typeholes.ts-versions-switcher",
      "usernamehw.errorlens",
      "vivaxy.vscode-conventional-commits",
      "vue.volar",
      "wakatime.vscode-wakatime",
      "wix.vscode-import-cost",
      "wmaurer.change-case",
      "yoavbls.pretty-ts-errors",
      "ypresto.vscode-intelli-refactor",
      "yrm.type-challenges",
      "yzhang.markdown-all-in-one",
      "zhoucheng0431.vitepress-snippets"
    ]
  },
  "folders": [
    {
      "name": "âœ¨ sugar-wiki-monorepo",
      "path": "."
    },
    {
      "name": "ðŸ“¦ blogpress",
      "path": "packages/blogpress"
    },
    {
      "name": "ðŸ“¦ @sugarat/create-theme",
      "path": "packages/create-theme"
    },
    {
      "name": "ðŸ“¦ @sugarat/theme-shared",
      "path": "packages/shared"
    },
    {
      "name": "ðŸ“¦ @sugarat/theme",
      "path": "packages/theme"
    },
    {
      "name": "ðŸ“¦ vitepress-plugin-pagefind",
      "path": "packages/vitepress-plugin-pagefind"
    },
    {
      "name": "ðŸ“¦ vitepress-plugin-rss",
      "path": "packages/vitepress-plugin-rss"
    }
  ],
  "settings": {
    "editor.cursorSmoothCaretAnimation": "on",
    "editor.fontFamily": "Input Mono, monospace",
    "editor.guides.bracketPairs": "active",
    "editor.lineNumbers": "interval",
    "editor.renderWhitespace": "boundary",
    "window.autoDetectColorScheme": true,
    "workbench.colorTheme": "Vitesse Dark",
    "workbench.editor.tabActionLocation": "right",
    "workbench.fontAliasing": "antialiased",
    "workbench.iconTheme": "catppuccin-mocha",
    "workbench.list.smoothScrolling": true,
    "workbench.preferredDarkColorTheme": "Vitesse Dark",
    "workbench.preferredLightColorTheme": "Vitesse Light",
    "workbench.productIconTheme": "icons-carbon",
    "workbench.sideBar.location": "left",
    "workbench.startupEditor": "newUntitledFile",
    "workbench.tree.expandMode": "singleClick",
    "workbench.tree.indent": 10,
    "debug.onTaskErrors": "debugAnyway",
    "diffEditor.ignoreTrimWhitespace": false,
    "editor.wordSeparators": "`~!@#%^&*()=+[{]}\\|;:'\",.<>/?",
    "editor.find.addExtraSpaceOnTop": false,
    "editor.inlineSuggest.enabled": true,
    "editor.multiCursorModifier": "ctrlCmd",
    "editor.suggestSelection": "first",
    "editor.tabSize": 2,
    "editor.unicodeHighlight.invisibleCharacters": false,
    "editor.stickyScroll.enabled": true,
    "editor.hover.sticky": true,
    "editor.codeActionsOnSave": {
      "source.fixAll": "never",
      "source.fixAll.eslint": "explicit",
      "source.organizeImports": "never"
    },
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    "files.eol": "\n",
    "files.insertFinalNewline": true,
    "files.simpleDialog.enable": true,
    "git.autofetch": true,
    "git.confirmSync": false,
    "git.enableSmartCommit": true,
    "git.untrackedChanges": "separate",
    "scm.diffDecorationsGutterWidth": 2,
    "terminal.integrated.cursorBlinking": true,
    "terminal.integrated.cursorStyle": "line",
    "terminal.integrated.fontWeight": "300",
    "terminal.integrated.persistentSessionReviveProcess": "never",
    "terminal.integrated.tabs.enabled": true,
    "workbench.editor.closeOnFileDelete": true,
    "workbench.editor.highlightModifiedTabs": true,
    "workbench.editor.limit.enabled": true,
    "workbench.editor.limit.perEditorGroup": true,
    "workbench.editor.limit.value": 5,
    "search.exclude": {
      "**/*.snap": true,
      "**/*.svg": true,
      "**/.git": true,
      "**/.github": false,
      "**/.nuxt": true,
      "**/.output": true,
      "**/.pnpm": true,
      "**/.vscode": true,
      "**/.yarn": true,
      "**/assets": true,
      "**/bower_components": true,
      "**/dist/**": true,
      "**/logs": true,
      "**/node_modules": true,
      "**/out/**": true,
      "**/package-lock.json": true,
      "**/pnpm-lock.yaml": true,
      "**/public": true,
      "**/temp": true,
      "**/yarn.lock": true,
      "**/CHANGELOG*": true,
      "**/LICENSE*": true
    },
    "window.dialogStyle": "custom",
    "window.nativeTabs": true,
    "window.title": "${rootName}",
    "window.titleBarStyle": "custom",
    "extensions.autoUpdate": "onlyEnabledExtensions",
    "emmet.showSuggestionsAsSnippets": true,
    "emmet.triggerExpansionOnTab": false,
    "errorLens.enabledDiagnosticLevels": [
      "warning",
      "error"
    ],
    "errorLens.excludeBySource": [
      "cSpell",
      "Grammarly",
      "eslint"
    ],
    "eslint.codeAction.showDocumentation": {
      "enable": true
    },
    "eslint.quiet": true,
    "eslint.rules.customizations": [
      {
        "rule": "style/*",
        "severity": "off"
      },
      {
        "rule": "format/*",
        "severity": "off"
      },
      {
        "rule": "*-indent",
        "severity": "off"
      },
      {
        "rule": "*-spacing",
        "severity": "off"
      },
      {
        "rule": "*-spaces",
        "severity": "off"
      },
      {
        "rule": "*-order",
        "severity": "off"
      },
      {
        "rule": "*-dangle",
        "severity": "off"
      },
      {
        "rule": "*-newline",
        "severity": "off"
      },
      {
        "rule": "*quotes",
        "severity": "off"
      },
      {
        "rule": "*semi",
        "severity": "off"
      }
    ],
    "eslint.validate": [
      "javascript",
      "javascriptreact",
      "typescript",
      "typescriptreact",
      "vue",
      "html",
      "markdown",
      "json",
      "jsonc",
      "yaml",
      "toml"
    ],
    "github.copilot.enable": {
      "*": true,
      "markdown": true,
      "plaintext": false
    },
    "cSpell.allowCompoundWords": true,
    "cSpell.language": "en,en-US",
    "css.lint.hexColorLength": "ignore",
    "githubIssues.workingIssueFormatScm": "#${issueNumberLabel}",
    "githubPullRequests.fileListLayout": "tree",
    "gitlens.codeLens.authors.enabled": false,
    "gitlens.codeLens.enabled": false,
    "gitlens.codeLens.recentChange.enabled": false,
    "gitlens.menus": {
      "editor": {
        "blame": false,
        "clipboard": true,
        "compare": true,
        "history": false,
        "remote": false
      },
      "editorGroup": {
        "blame": true,
        "compare": false
      },
      "editorTab": {
        "clipboard": true,
        "compare": true,
        "history": true,
        "remote": true
      },
      "explorer": {
        "clipboard": true,
        "compare": true,
        "history": true,
        "remote": true
      },
      "scm": {
        "authors": true
      },
      "scmGroup": {
        "compare": true,
        "openClose": true,
        "stash": true
      },
      "scmGroupInline": {
        "stash": true
      },
      "scmItem": {
        "clipboard": true,
        "compare": true,
        "history": true,
        "remote": false,
        "stash": true
      }
    },
    "i18n-ally.autoDetection": false,
    "i18n-ally.displayLanguage": "en",
    "i18n-ally.ignoredLocales": [],
    "iconify.annotations": true,
    "iconify.inplace": true,
    "svg.preview.mode": "svg",
    "prettier.enable": false,
    "prettier.printWidth": 200,
    "prettier.semi": false,
    "prettier.singleQuote": true,
    "explorer.fileNesting.enabled": true,
    "explorer.fileNesting.expand": false,
    "explorer.fileNesting.patterns": {
      "*.asax": "$(capture).*.cs, $(capture).*.vb",
      "*.ascx": "$(capture).*.cs, $(capture).*.vb",
      "*.ashx": "$(capture).*.cs, $(capture).*.vb",
      "*.aspx": "$(capture).*.cs, $(capture).*.vb",
      "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
      "*.c": "$(capture).h",
      "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
      "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
      "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
      "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
      "*.cs": "$(capture).*.cs",
      "*.cshtml": "$(capture).cshtml.cs",
      "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
      "*.css": "$(capture).css.map, $(capture).*.css",
      "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
      "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
      "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
      "*.go": "$(capture)_test.go",
      "*.java": "$(capture).class",
      "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
      "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx",
      "*.master": "$(capture).*.cs, $(capture).*.vb",
      "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
      "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
      "*.pubxml": "$(capture).pubxml.user",
      "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
      "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
      "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
      "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx",
      "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
      "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
      "*.xaml": "$(capture).xaml.cs",
      "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",
      "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",
      ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
      ".env": "*.env, .env.*, .envrc, env.d.ts",
      ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
      ".project": ".classpath",
      "//": "Last update at 4/29/2023, 2:04:58 PM",
      "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
      "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
      "I*.cs": "$(capture).cs",
      "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
      "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
      "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
      "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
      "default.nix": "shell.nix",
      "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
      "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",
      "flake.nix": "flake.lock",
      "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
      "gemfile": ".ruby-version, gemfile.lock",
      "go.mod": ".air*, go.sum",
      "go.work": "go.work.sum",
      "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
      "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
      "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
      "package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
      "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
      "pyproject.toml": ".pdm.toml, pdm.lock, pyproject.toml",
      "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
      "readme*": "authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",
      "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
      "rush.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
      "shims.d.ts": "*.d.ts",
      "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, webpack.config.*, windi.config.*",
      "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
      "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
    },
    "code-runner.executorMap": {
      "typescript": "cd $dir && npx tsx $fullFileName"
    },
    "code-runner.executorMapByFileExtension": {
      ".ts": "cd $dir && npx tsx $fullFileName"
    },
    "editor.formatOnSave": false,
    "eslint.format.enable": true,
    "eslint.useFlatConfig": true,
    "[javascript]": {
      "editor.defaultFormatter": "vscode.typescript-language-features"
    },
    "[jsonc]": {
      "editor.defaultFormatter": "vscode.json-language-features"
    },
    "[markdown]": {
      "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    },
    "[typescript]": {
      "editor.defaultFormatter": "vscode.typescript-language-features"
    },
    "[vue]": {
      "editor.defaultFormatter": "Vue.volar"
    },
    "autoRestart.fileGlobForESLint": "**/{.eslintrc,eslint.config}.{js,cjs,yaml,yml,json,mjs,ts,mts}",
    "autoRestart.fileGlobForTypescript": "**/{tsconfig,tsconfig.base,base.tsconfig}.{json,app.json,app.js,js,ts}",
    "autoRestart.monitorFilesForESLint": true,
    "autoRestart.showRestartNotificationForESLint": true,
    "code-runner.clearPreviousOutput": true,
    "ColorfulMonorepo.workspaces.collection": [],
    "commit-message-editor.dynamicTemplate": [
      "{type}{scope}: {description}",
      "",
      "{body}",
      "",
      "{breaking_change}{footer}"
    ],
    "commit-message-editor.staticTemplate": [
      "feat: Short description",
      "",
      "Message body",
      "",
      "Message footer"
    ],
    "commit-message-editor.tokens": [
      {
        "description": "Type of changes",
        "label": "Type",
        "name": "type",
        "options": [
          {
            "label": "---",
            "value": ""
          },
          {
            "description": "Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)",
            "label": "build"
          },
          {
            "description": "Updating grunt tasks etc; no production code change",
            "label": "chore"
          },
          {
            "description": "Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)",
            "label": "ci"
          },
          {
            "description": "Documentation only changes",
            "label": "docs"
          },
          {
            "description": "A new feature",
            "label": "feat"
          },
          {
            "description": "A bug fix",
            "label": "fix"
          },
          {
            "description": "A code change that improves performance",
            "label": "perf"
          },
          {
            "description": "A code change that neither fixes a bug nor adds a feature",
            "label": "refactor"
          },
          {
            "label": "revert"
          },
          {
            "description": "Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)",
            "label": "style"
          },
          {
            "description": "Adding missing tests or correcting existing tests",
            "label": "test"
          }
        ],
        "type": "enum"
      },
      {
        "description": "A scope may be provided to a commitâ€™s type, to provide additional contextual information and is contained within parenthesis, e.g., \"feat(parser): add ability to parse arrays\".",
        "label": "Scope",
        "multiline": false,
        "name": "scope",
        "prefix": "(",
        "suffix": ")",
        "type": "text"
      },
      {
        "description": "Short description in the subject line.",
        "label": "Short description",
        "multiline": false,
        "name": "description",
        "type": "text"
      },
      {
        "description": "Optional body",
        "label": "Body",
        "lines": 5,
        "maxLines": 10,
        "multiline": true,
        "name": "body",
        "type": "text"
      },
      {
        "default": false,
        "label": "Breaking change",
        "name": "breaking_change",
        "type": "boolean",
        "value": "BREAKING CHANGE: "
      },
      {
        "description": "Optional footer",
        "label": "Footer",
        "multiline": true,
        "name": "footer",
        "type": "text"
      }
    ],
    "conventionalCommits.scopes": [
      "pkg upgrade",
      "actions",
      "scaffold",
      "theme",
      "workspace"
    ],
    "editor.defaultFormatter": "rvest.vs-code-prettier-eslint",
    "editor.formatOnPaste": false,
    "editor.formatOnSaveMode": "file",
    "editor.formatOnType": false,
    "editor.minimap.enabled": false,
    "editor.trimAutoWhitespace": false,
    "eslint.ignoreUntitled": true,
    "explorerExclude.backup": {},
    "files.autoSave": "onFocusChange",
    "files.exclude": {
      "**/.git": false,
      "**/.svn": false,
      "**/.hg": false,
      "**/CVS": false,
      "**/.DS_Store": false,
      "**/Thumbs.db": false,
      "**/node_modules": false
    },
    "files.trimTrailingWhitespaceInRegexAndStrings": false,
    "gitdoc.filePattern": "**/*.md",
    "gitdoc.pushMode": "push",
    "gitdoc.timeZone": "CN",
    "githubPullRequests.createOnPublishBranch": "never",
    "gitlens.blame.format": "${message|50?} ${agoOrDate|14-}",
    "gitlens.blame.toggleMode": "file",
    "gitlens.currentLine.enabled": false,
    "gitlens.currentLine.pullRequests.enabled": false,
    "gitlens.hovers.currentLine.over": "line",
    "gitlens.hovers.enabled": false,
    "gitlens.showWelcomeOnInstall": false,
    "gitlens.statusBar.enabled": true,
    "gitlens.statusBar.pullRequests.enabled": true,
    "gitlens.views.branches.branches.layout": "list",
    "gitlens.views.commitDetails.autolinks.enabled": true,
    "javascript.experimental.updateImportsOnPaste": true,
    "javascript.format.insertSpaceAfterConstructor": true,
    "Lingma.cloudModelEnable": false,
    "Lingma.localMachineModel": false,
    "Lingma.methodQuickOperation": false,
    "markdown-preview-enhanced.alwaysShowBacklinksInPreview": true,
    "markdown-preview-enhanced.automaticallyShowPreviewOfMarkdownBeingEdited": true,
    "markdown.extension.completion.enabled": true,
    "redhat.telemetry.enabled": true,
    "typescript.tsdk": "âœ¨ sugar-wiki-monorepo\\node_modules\\typescript\\lib",
    "vs-code-prettier-eslint.prettierLast": false,
    "workbench.colorCustomizations": {
      "sideBarTitle.foreground": "#9c643b",
      "statusBar.background": "#9c643b",
      "statusBar.foreground": "#ffffff",
      "tab.activeBorder": "#9c643b"
    },
    "workbench.editor.alwaysShowEditorActions": true,
    "accessibility.signalOptions.volume": 70,
    "accessibility.signalOptions.experimental.delays.general": {
      "announcement": 3000,
      "sound": 400
    },
    "accessibility.signalOptions.experimental.delays.errorAtPosition": {
      "announcement": 3000,
      "sound": 1000
    },
    "accessibility.signalOptions.experimental.delays.warningAtPosition": {
      "announcement": 3000,
      "sound": 1000
    },
    "editor.tokenColorCustomizations": {
      "comments": "#00000000",
      "textMateRules": [
        {
          "scope": [
            "hidecomments",
            "comment",
            "comment.block",
            "comment.line",
            "comment.line.double-slash",
            "variable.other.jsdoc",
            "storage.type.class.jsdoc",
            "punctuation.definition.block.tag.jsdoc",
            "punctuation.definition.bracket.curly.begin.jsdoc",
            "punctuation.definition.bracket.curly.end.jsdoc",
            "entity.name.type.instance.jsdoc",
            "comment.block.documentation.ts",
            "comment.block.documentation.js",
            "comment.block.documentation.cs",
            "comment.block.documentation.cs entity.other.attribute-name.localname.cs",
            "comment.block.documentation.cs entity.other.attribute-name.cs",
            "comment.block.documentation.cs punctuation.definition.tag.cs",
            "comment.block.documentation.cs punctuation.definition.string.begin.cs",
            "comment.block.documentation.cs punctuation.definition.string.end.cs",
            "comment.block.documentation.cs punctuation.definition.bracket.curly.begin.cs",
            "comment.block.documentation.cs punctuation.definition.bracket.curly.end.cs",
            "comment.block.documentation.cs punctuation.definition.block.tag.cs",
            "comment.block.documentation.cs string.quoted.double.cs",
            "comment.block.documentation.cs entity.name.tag.localname.cs"
          ],
          "settings": {
            "foreground": "#00000000"
          }
        }
      ]
    },
    "[yaml]": {
      "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    },
    "[json]": {
      "editor.defaultFormatter": "vscode.json-language-features"
    },
    "[scss]": {
      "editor.defaultFormatter": "vscode.css-language-features"
    },
    "explorer.excludeGitIgnore": true,
    "workbench.editor.sharedViewState": true,
    "workbench.view.alwaysShowHeaderActions": true,
    "emeraldwalk.runonsave": {
      "commands": [
        {
          "match": "package.json",
          "isAsync": true,
          "cmd": "pnpx vscode-ext-gen"
        }
      ]
    }
  }
}