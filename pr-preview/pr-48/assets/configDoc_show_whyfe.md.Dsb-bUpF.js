import{j as e,b as t,c as r,a7 as l}from"./chunks/framework.B0f4rbfy.js";const b=JSON.parse('{"title":"【2020】我眼中的前端🧐","description":"","frontmatter":{"isTimeLine":true,"date":"2020-12-13T00:00:00.000Z","tags":["大前端"],"categories":["其它"],"sticky":7},"headers":[],"relativePath":"_configDoc/show/whyfe.md","filePath":"_configDoc/show/whyfe.md","lastUpdated":1704629533000}'),a={name:"_configDoc/show/whyfe.md"},i=l('<h1 id="【2020】我眼中的前端🧐" tabindex="-1">【2020】我眼中的前端🧐 <a class="header-anchor" href="#【2020】我眼中的前端🧐" aria-label="Permalink to &quot;【2020】我眼中的前端🧐&quot;">​</a></h1><blockquote><p>个人能力有限，大部分内容均站在个人角度思考，如有表述错误之处，还请斧正，避免误导新同学</p></blockquote><h2 id="写本文目的" tabindex="-1">写本文目的 <a class="header-anchor" href="#写本文目的" aria-label="Permalink to &quot;写本文目的&quot;">​</a></h2><ul><li>为了帮助想学前端，或者正在学前端的学弟学妹，前端新人等 重新认识前端或者说是加深对<strong>前端工程师</strong>的认识</li><li>回答收集到的一些疑问</li></ul><p>tips:本文中提到的FE（Front-End）均指前端</p><h2 id="什么是前端开发" tabindex="-1">什么是前端开发 <a class="header-anchor" href="#什么是前端开发" aria-label="Permalink to &quot;什么是前端开发&quot;">​</a></h2><p>这里先引用<a href="https://baike.baidu.com/item/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91" target="_blank" rel="noreferrer">百度百科-前端开发</a>的介绍</p><blockquote><p>前端开发是创建Web页面或app等前端界面呈现给用户的过程，通过HTML，CSS及JavaScript以及衍生出来的各种技术、框架、解决方案，来实现互联网产品的用户界面交互</p></blockquote><blockquote><p>从网页制作演变而来，名称上有很明显的时代特征。在互联网的演化进程中，网页制作是Web1.0时代的产物，早期网站主要内容都是静态，以图片和文字为主，用户使用网站的行为也以浏览为主。随着互联网技术的发展和HTML5、CSS3的应用，现代网页更加美观，交互效果显著，功能更加强大。</p></blockquote><p>目前很多新同学和部分学校的老师对前端开发的认识还是停留在<strong>Web1.0</strong>时代</p><p>认为FE的工作就是写写网页（页面），认为没有什么难度，容易学习，能力很容易达到天花板</p><p>加之网上各种在线教育机构，铺天盖地的针对没有过多FE基础的同学的课程广告 （XX天入门前端，仿XX项目，XX天入门到精通）容易对新人产生误导</p><p>这是一种比较狭义的认识</p><p><strong>从广义上来讲，所有用户终端产品与<code>视觉</code>和<code>交互</code>有关的部分，都有前端工程师的身影，且前端工程师的职责不止于此</strong>，后文会详细介绍</p><p><strong>终端指</strong></p><ul><li>PC</li><li>移动端：Android，IOS</li><li>嵌入式设备：Pos机，工作台，智能穿戴设备等</li></ul><h2 id="什么是web前端工程师" tabindex="-1">什么是Web前端工程师 <a class="header-anchor" href="#什么是web前端工程师" aria-label="Permalink to &quot;什么是Web前端工程师&quot;">​</a></h2><p>字面上理解就是 主要掌握的Web开发相关技术的前端同学</p><p>而与Web相关的技术 就是 HTML,JS,CSS</p><p>由此大家就联想到 就是做网站的页面开发</p><p>在目前招聘中 Web前端工程师和前端工程师其实指的就是同一个岗位</p><h2 id="工作就只是写写页面吗" tabindex="-1">工作就只是写写页面吗 <a class="header-anchor" href="#工作就只是写写页面吗" aria-label="Permalink to &quot;工作就只是写写页面吗&quot;">​</a></h2><p>前端只写网页页面的时代已经过去很久了</p><p>前面也提到了凡是在终端产品中的视觉与交互相关的工作都需要前端工程师 的参与</p><p>随着端上的硬件配置越来越高，性能越来越好，用户想要的功能就越来越多</p><p>前端的工作是直接影响用户体验的，PM（产品经理）也为了提升用户对产品的使用粘性，也会提出更多的用户体验上的要求，这些是光会写页面所解决不了的</p><p>为了丰富用户的体验，就需要丰富页面的交互，动画，提升用户粘性就是利用端上的游戏</p><p><strong>例如：</strong></p><p>年报（支付宝年度账单）里面的交互动画，数据报表，这里面就涉及到了 <strong>数据可视化</strong>，<strong>复杂交互动画</strong>等技术，各主流App中的内置,果园游戏,种树游戏,每年双十一的淘宝<strong>游戏</strong>活动等，这些都是需要前端工程师的工作内容</p><h2 id="快速发展的前端" tabindex="-1">快速发展的前端 <a class="header-anchor" href="#快速发展的前端" aria-label="Permalink to &quot;快速发展的前端&quot;">​</a></h2><p><img src="https://img.cdn.sugarat.top/mdImg/MTYwNzgyODkyNTU2OA==607828925568" alt="图片" loading="lazy"></p><p>在Web1.0时代掌握 HTML,JS,CSS 即可</p><p>但现代Web开发强调<strong>工程化</strong>，所需要掌握的内容远不止于此，尤其是JS现在已经算是前端的顶梁柱</p><p>由此诞生了一句名言：</p><blockquote><p>任何可以用 JavaScript 来写的应用，最终都将用 JavaScript 来写</p></blockquote><h2 id="我们能做什么" tabindex="-1">我们能做什么 <a class="header-anchor" href="#我们能做什么" aria-label="Permalink to &quot;我们能做什么&quot;">​</a></h2><p>除了普通的页面编写，前端<strong>工程师</strong> 还有很多能做的事情...</p><h3 id="面向普通用户" tabindex="-1">面向普通用户 <a class="header-anchor" href="#面向普通用户" aria-label="Permalink to &quot;面向普通用户&quot;">​</a></h3><ul><li>PC：PC网页，桌面应用</li><li>移动端：H5应用，手机App，小程序</li><li>互动交互 <ul><li>游戏：比如支付宝（蚂蚁庄园，蚂蚁森林），淘宝（每年双十一的游戏活动页），各种App中的果园游戏，常见于活动页的交互游戏</li><li>动画：用户看见的一些有趣的动画</li><li>交互：组件/页面维度之间的交互动画</li></ul></li><li>数据可视化：用户常见的数据图表</li></ul><h3 id="面向开发者" tabindex="-1">面向开发者 <a class="header-anchor" href="#面向开发者" aria-label="Permalink to &quot;面向开发者&quot;">​</a></h3><ul><li>工程化 <ul><li>流程规范工具</li><li>度量监控系统：日志收集，错误上报，页面监控，数据分析，水印服务等</li><li>构建工具：基于现有的构建工具进行定制化</li><li>研发框架：针对特定业务场景框架，基于已有的开源框架进行定制化的框架</li><li>CLI：脚手架工具</li><li>组件：UI组件，业务组件，图形组件</li><li>测试：UI自动化测试工具</li><li>CI/CD：持续集成与持续交付平台搭建，云构建平台</li></ul></li><li>性能优化</li><li>Node.js <ul><li>Node中间件</li><li>服务端开发框架</li><li>\b各种自动化工具</li></ul></li><li>跨端技术：一套代码，多端复用的框架 <ul><li>小程序跨端：微信，QQ,支付宝，百度，字节跳动，快应用等等小程序</li><li>移动端跨端：IOS,Android</li><li>PC端跨端：windows，Linux，MacOS</li></ul></li><li>可视化技术：将数据转化成为交互的图形或图像 <ul><li>数据报表</li><li>地理信息可视化</li><li>数据图表</li></ul></li><li>搭建服务平台：通过拖拽，结合少量配置的方式生成完整的页面技术</li><li>智能化平台：通过AI机器学习，实现直接通过设计原件 生成页面代码，并保证代码的高质量</li></ul><h2 id="如何成为合格的初级fe" tabindex="-1">如何成为合格的初级FE <a class="header-anchor" href="#如何成为合格的初级fe" aria-label="Permalink to &quot;如何成为合格的初级FE&quot;">​</a></h2><p><strong>个人观点</strong></p><h3 id="_1-具备一定的html-css基础" tabindex="-1">1. 具备一定的HTML,CSS基础 <a class="header-anchor" href="#_1-具备一定的html-css基础" aria-label="Permalink to &quot;1. 具备一定的HTML,CSS基础&quot;">​</a></h3><ul><li>能完成对UI设计稿的还原</li><li>能完成一些简单的交互动画</li></ul><h3 id="_2-扎实的js基础" tabindex="-1">2. 扎实的JS基础 <a class="header-anchor" href="#_2-扎实的js基础" aria-label="Permalink to &quot;2. 扎实的JS基础&quot;">​</a></h3><p>js是FE书写最多的内容，很多框架技术,工具等也由JS书写，即最终都脱离不了JS</p><ul><li>熟悉ES5,ES6的语法</li><li>了解BOM/DOM API: 至少了解这些API提供了哪些能力，不一定要记住API如何使用</li><li>熟悉一门现代Web框架（Vue,React,Angular）的使用,并了解其一些核心的原理</li></ul><h3 id="_3-工程化能力" tabindex="-1">3. 工程化能力 <a class="header-anchor" href="#_3-工程化能力" aria-label="Permalink to &quot;3. 工程化能力&quot;">​</a></h3><ul><li>了解如何使用构建工具</li><li>了解如何调试自己的应用</li></ul><h3 id="_4-项目能力" tabindex="-1">4. 项目能力 <a class="header-anchor" href="#_4-项目能力" aria-label="Permalink to &quot;4. 项目能力&quot;">​</a></h3><ul><li>能够部署自己的web应用</li><li>\b\b会使用一种数据库</li><li>具备一定的服务端开发能力</li></ul><h3 id="其它" tabindex="-1">其它 <a class="header-anchor" href="#其它" aria-label="Permalink to &quot;其它&quot;">​</a></h3><ul><li>能够持续学习</li><li>不排斥新技术</li></ul><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>前端目前正在迅猛发展，未来的前景也是一片大好</p><p>随着硬件技术的迭代，会出现更多的应用场景，FE的工作还是非常具有挑战性的</p><p>行业缺的是 <strong>工程师</strong>，而不是 <strong>UI还原师</strong></p><h2 id="qa" tabindex="-1">QA <a class="header-anchor" href="#qa" aria-label="Permalink to &quot;QA&quot;">​</a></h2><h3 id="_1-前端的主要工作-以及前端的好处及坏处" tabindex="-1">1. 前端的主要工作，以及前端的好处及坏处 <a class="header-anchor" href="#_1-前端的主要工作-以及前端的好处及坏处" aria-label="Permalink to &quot;1. 前端的主要工作，以及前端的好处及坏处&quot;">​</a></h3><p>前端工程师的主要工作上面已经做了详细的介绍</p><p>好处，emmm，在我看来</p><ul><li>工作绝对是有挑战性，能挖掘自己的潜力，让自己持续不断的学习进步</li><li>随着企业纷纷开辟线上的场地，是非常缺<strong>前端工程师</strong>的，即好就业</li><li>技术产物是最接近用户的，能够获得极大的成就感</li></ul><p>坏处，我客观的说几个</p><ul><li>技术更新比较快，需要持续不断的学习</li><li>技术种类比较繁多，容易劝退刚会一点，没有人指导方向的初学者</li><li>容易原地踏步</li></ul><h3 id="_2-前端如何入门-前端学习的阶段-学习步骤" tabindex="-1">2. 前端如何入门，前端学习的阶段（学习步骤） <a class="header-anchor" href="#_2-前端如何入门-前端学习的阶段-学习步骤" aria-label="Permalink to &quot;2. 前端如何入门，前端学习的阶段（学习步骤）&quot;">​</a></h3><h4 id="阶段一-页面还原" tabindex="-1">阶段一：页面还原 <a class="header-anchor" href="#阶段一-页面还原" aria-label="Permalink to &quot;阶段一：页面还原&quot;">​</a></h4><ol><li>\b\b\b了解CSS，HTML的基本语法，熟悉常用属性的编写</li><li>达到能对常见的页面(不包含复杂动画与交互)进行1:1的静态还原</li></ol><p>学习资料：</p><ul><li><a href="https://www.runoob.com/" target="_blank" rel="noreferrer">菜鸟教程</a>我一直觉得是个不错的入门学习的网站 <ul><li><a href="https://www.runoob.com/html/html-tutorial.html" target="_blank" rel="noreferrer">HTML部分内容</a></li><li><a href="https://www.runoob.com/css/css-tutorial.html" target="_blank" rel="noreferrer">CSS部分内容</a></li></ul></li></ul><p>学习过程主要是<strong>了解其所拥有的能力</strong>，而不是刻意去记住xx属性怎么拼写，有什么作用</p><p>在大致了解起基本能力后可以试着看几个综合案例的实现</p><ul><li><a href="https://www.runoob.com/w3cnote/htmlcss-make-a-website.html" target="_blank" rel="noreferrer">简单页面</a></li><li>去<a href="https://www.bilibili.com/" target="_blank" rel="noreferrer">学习网站</a>找个复杂的案例跟一遍 <ul><li>这里随便找了个<a href="https://www.bilibili.com/video/BV1yE411D77E?p=1" target="_blank" rel="noreferrer">案例</a></li></ul></li></ul><p>在看视频学习时，当遇到素材问题时，可<strong>不必与教程一模一样</strong>，我们的目的是学习这个过程，在实现上可以有<strong>自己的思考</strong>,素材可根据自己喜好替换或者留白</p><h4 id="阶段二-赋予页面活力" tabindex="-1">阶段二: 赋予页面活力 <a class="header-anchor" href="#阶段二-赋予页面活力" aria-label="Permalink to &quot;阶段二: 赋予页面活力&quot;">​</a></h4><ol><li>了解JS的基本用法，能简单的对页面进行控制</li></ol><p>学习资料：</p><ul><li><a href="https://www.runoob.com/js/js-tutorial.html" target="_blank" rel="noreferrer">JavaScript 教程</a></li><li><a href="https://www.runoob.com/js/js-htmldom.html" target="_blank" rel="noreferrer">Js Dom</a></li></ul><p>资料始终是作为辅助学习<strong>工具</strong>，初学过程得自己判断章节的取舍，而不是按照目录 挨着挨着学</p><p>在<strong>了解基本语法后</strong>就可去学习网站上找一个 结合了js的综合案例</p><p>当能通过查阅资料来完成自己页面想法的时候，差不多就算入门了</p><h4 id="阶段三-趁热打铁" tabindex="-1">阶段三：趁热打铁 <a class="header-anchor" href="#阶段三-趁热打铁" aria-label="Permalink to &quot;阶段三：趁热打铁&quot;">​</a></h4><ol><li>在学会了使用 传统的“三剑客”开发页面后，接着体验一下现代的开发框架开发</li></ol><p>此时针对JS基础薄弱的同学，推荐<strong>Vue.js入门</strong>，如果觉得自己的JS还不错可以考虑 <strong>React.js</strong></p><p>这两个都是js的框架，本质上也是js,即由js的基础能力构成的一个拥有完备工程开发能力的工具</p><ul><li><a href="https://cn.vuejs.org/index.html" target="_blank" rel="noreferrer">Vue</a></li><li><a href="https://zh-hans.reactjs.org/" target="_blank" rel="noreferrer">React</a></li></ul><p>如果不习惯看官方文档的学习方式，可自行网上找其它的学习资料，相信此时的你已经拥有自己的一套方法搜寻资料</p><p>不过最终还是会回到学习文档这里来</p><h4 id="阶段四-返璞归真" tabindex="-1">阶段四：返璞归真 <a class="header-anchor" href="#阶段四-返璞归真" aria-label="Permalink to &quot;阶段四：返璞归真&quot;">​</a></h4><ul><li>此时的你应该已经具备开发一个普通项目/页面的能力了</li></ul><p>此时就需要重新系统的弥补自己的基础能力（JS为主,CSS为次要）,相信二次的学习，会有很大的收获，过程中会产生一些<strong>顿悟</strong></p><p>javascript:</p><ul><li><a href="https://wangdoc.com/javascript/" target="_blank" rel="noreferrer">ES5</a></li><li><a href="https://wangdoc.com/es6/" target="_blank" rel="noreferrer">ES6</a></li></ul><p>css:</p><ul><li><a href="https://www.runoob.com/css3/css3-tutorial.html" target="_blank" rel="noreferrer">css3的新能力</a></li><li><a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="noreferrer">弹性布局:flex</a></li><li><a href="https://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html" target="_blank" rel="noreferrer">栅栏布局:grid</a></li><li>响应式布局</li></ul><h4 id="阶段五-无尽的探索" tabindex="-1">阶段五：无尽的探索 <a class="header-anchor" href="#阶段五-无尽的探索" aria-label="Permalink to &quot;阶段五：无尽的探索&quot;">​</a></h4><p>此时你已经是具备一定的实战经验，拥有扎实的基础知识支撑：</p><p>可以在后文列举的 开发技术中 探索自己感兴趣的内容</p><p>又或者不满足于只能实现静态网页，可以学习一些后端的技术（最低成本基于Node.js的后端能力）</p><p>后面的路，自己去探索是最好的，去寻找自己感兴趣的方向，先广度，后深入探寻</p><h3 id="_3-前端学习有什么需要注意的吗" tabindex="-1">3. 前端学习有什么需要注意的吗 <a class="header-anchor" href="#_3-前端学习有什么需要注意的吗" aria-label="Permalink to &quot;3. 前端学习有什么需要注意的吗&quot;">​</a></h3><ol><li><strong>重视基础内容，尤其js</strong>，会的不在多，在于精</li><li>切勿急于求成，觉得自己<strong>能随心所欲的写出一个页面</strong>就沾沾自喜，能够完成学校的项目，觉得自己找工作就没问题了</li><li>不骄不躁，脚踏实地的学习</li></ol><h3 id="_4-前端学习进入大厂的方式" tabindex="-1">4. 前端学习进入大厂的方式 <a class="header-anchor" href="#_4-前端学习进入大厂的方式" aria-label="Permalink to &quot;4. 前端学习进入大厂的方式&quot;">​</a></h3><blockquote><p>了解：听说过这个概念，知道是干什么的</p></blockquote><blockquote><p>熟悉：能快速地利用这个技术构建一个可用的应用</p></blockquote><blockquote><p>精通：读过源码，了解其原理，可对其修改以满足某些特殊需求</p></blockquote><ul><li>扎实的前端技术 <ul><li>熟练掌握js，css，html</li><li>具备一定的实战项目开发经验</li><li>对框架（Vue/React）的原理有一定了解，能复现或者清楚的描述出来</li><li>对前端工程化有自己的理解和实战经验</li><li>一些额外的开发能力（能够描述清楚技术的原理） <ul><li>xx插件</li><li>小程序</li><li>桌面应用</li><li>移动App</li><li>跨端开发技术</li><li>...</li></ul></li></ul></li><li>扎实的计算机基础知识（前端同学考察比较浅，但一定会考，<strong>切勿轻视</strong>） <ul><li>操作系统</li><li>算法与数据结构</li><li>计算机网络</li><li>设计模式</li></ul></li><li>加分项（我认为） <ul><li>有一定的后端开发能力 <ul><li>服务端开发经验</li><li>数据库</li></ul></li><li>多人协作项目的开发</li><li>熟悉Git</li><li>了解Linux的基本用法</li><li>会部署自己的前端工程</li><li>自己的个人博客</li><li>实习经验</li></ul></li></ul><p>校招考点在<a href="./../top/campusProblem.html">这里</a>也做了总结</p><h3 id="_5-前端学习如何可以快速做出一个项目-学什么" tabindex="-1">5. 前端学习如何可以快速做出一个项目（学什么） <a class="header-anchor" href="#_5-前端学习如何可以快速做出一个项目-学什么" aria-label="Permalink to &quot;5. 前端学习如何可以快速做出一个项目（学什么）&quot;">​</a></h3><p>希望快速得到结果：</p><p>了解一下<strong>html,css</strong>怎么用如何书写,通过查阅资料,就可以开发一个简单的页面</p><p>如果希望丰富页面的交互，<strong>了解js的简单语法</strong>，根据自己想要的查一下<strong>BOM，DOM API</strong></p><p>能够通过查阅资料 写出代码（自己能懂每一行是什么意思）实现自己的项目，我觉得就算入门了</p><p>后续快速开发（JS基础薄弱的话）就可以学Vue框架（🍬）有时间的话，一周看完一个实践教程不成问题，过程中肯定会遇到很多 不解的东西，此时就需要记下来，下来去查资料，然后消化吸收，差不多1-2个实战教程后，就算框架入门了，自己也能更快速的实现自己想要的东西</p><p>接下来就需要回过头去 认真看一下JS</p><h3 id="_6-做一个桌面小程序或者微信小程序需要学习什么除了三件套之外" tabindex="-1">6. 做一个桌面小程序或者微信小程序需要学习什么除了三件套之外 <a class="header-anchor" href="#_6-做一个桌面小程序或者微信小程序需要学习什么除了三件套之外" aria-label="Permalink to &quot;6. 做一个桌面小程序或者微信小程序需要学习什么除了三件套之外&quot;">​</a></h3><p>小程序厂商约束了开发的规范，阉割了一些 <strong>“三剑客”</strong> 的能力，实际开发 还是运用的这三者，只是换了一些概念</p><p>即学习成本只有：<strong>熟悉特定厂商的开发规范文档，与开发工具（IDE）的使用</strong></p><p>如果不知如何入手，看文档看不懂，就推荐找一门小程序的实战课程看一下</p><p>如果想同时开发一个能在多个平台上线的小程序，推荐去学习一个跨端开发框架，后文有介绍</p><p>如果做 <strong>桌面应用的话</strong>，学习<a href="https://www.electronjs.org/" target="_blank" rel="noreferrer">Electron</a>框架即可，所使用到的技术依旧是 <strong>三剑客</strong>，只是需要遵循框架的开发规范</p><h3 id="_7-进入大厂除了必要的前端知识-还需要什么知识。比如后端-数据库之类的需要吗" tabindex="-1">7. 进入大厂除了必要的前端知识，还需要什么知识。比如后端，数据库之类的需要吗 <a class="header-anchor" href="#_7-进入大厂除了必要的前端知识-还需要什么知识。比如后端-数据库之类的需要吗" aria-label="Permalink to &quot;7. 进入大厂除了必要的前端知识，还需要什么知识。比如后端，数据库之类的需要吗&quot;">​</a></h3><ul><li>计算机基础知识</li><li>有一定的实战项目经验</li><li>Git</li><li>关于后端技术 <ul><li>非必须，但技多不压身，你会别人不会 这就是你的优势，我相信你也不满足于只写静态页面</li><li>数据库：非关系数据库，关系数据库 会使用一个</li></ul></li></ul><h3 id="_8-进入大厂需要准备什么以前端来说-比如项目-或者奖-是必要的吗" tabindex="-1">8. 进入大厂需要准备什么以前端来说，比如项目，或者奖，是必要的吗 <a class="header-anchor" href="#_8-进入大厂需要准备什么以前端来说-比如项目-或者奖-是必要的吗" aria-label="Permalink to &quot;8. 进入大厂需要准备什么以前端来说，比如项目，或者奖，是必要的吗&quot;">​</a></h3><ul><li>项目是<strong>一定需要的</strong><ul><li>在筛选简历环节环节，除了学校和你的能力基本介绍信息之外，就是看你简历上的项目，来判断你的实际开发能力，<strong>如果简历上一个项目都没有，那你简历上还剩什么？</strong></li></ul></li><li>奖：非必须 <ul><li>ACM此类知名的算法大赛获奖是含金量最高的，其它的程序设计比赛或者项目竞赛奖我觉得至少需要<strong>省一及以上</strong></li></ul></li></ul><h3 id="_9-关于目前开发框架现状" tabindex="-1">9. 关于目前开发框架现状 <a class="header-anchor" href="#_9-关于目前开发框架现状" aria-label="Permalink to &quot;9. 关于目前开发框架现状&quot;">​</a></h3><ul><li>曾经流行: JQuery,UI库（Bootstrap,Layui）,requirejs(模块化方案)</li><li>现在流行: 组件化开发，Vue，React</li></ul><h3 id="_10-与前端开发相关技术有哪些" tabindex="-1">10. 与前端开发相关技术有哪些 <a class="header-anchor" href="#_10-与前端开发相关技术有哪些" aria-label="Permalink to &quot;10. 与前端开发相关技术有哪些&quot;">​</a></h3><ul><li>\b平台相关 <ul><li>桌面应用：Electron</li><li>跨端开发：Native，React Native，Cordova, Weex，uni-app，Rax（阿里），Taro（京东），Chameleon（滴滴），Hippy（腾讯）等 --- 百花齐放 <ul><li>一端开发多端复用：代码复用</li><li>端指：web,ios,Android,小程序等</li></ul></li><li>web：Vue，React，Angular</li></ul></li><li>强类型支持：TypeScript</li><li>构建工具：Webpack，Gulp，Grunt</li><li>服务端：Node.js -&gt; express,koa,egg 等</li><li>css预编译：SASS、Less、Stylus</li></ul><p>以上只是对一些前端技术做了一些列举，并不全面，来说明现在<strong>前端繁荣的生态</strong>，下面专门做了一些详细的列举</p><h2 id="前端相关开发技术列举" tabindex="-1">前端相关开发技术列举 <a class="header-anchor" href="#前端相关开发技术列举" aria-label="Permalink to &quot;前端相关开发技术列举&quot;">​</a></h2><h3 id="_1-web开发" tabindex="-1">1. Web开发 <a class="header-anchor" href="#_1-web开发" aria-label="Permalink to &quot;1. Web开发&quot;">​</a></h3><p><strong>开发框架</strong></p><ul><li><a href="https://cn.vuejs.org/https://cn.vuejs.org/" target="_blank" rel="noreferrer">Vue</a></li><li><a href="https://react.docschina.org/" target="_blank" rel="noreferrer">React</a></li><li><a href="https://angular.cn/" target="_blank" rel="noreferrer">Angular</a></li></ul><p><strong>UI组件库</strong></p><ul><li>Vue: <a href="https://element.eleme.cn/" target="_blank" rel="noreferrer">ElementUI</a>,<a href="http://iview.talkingdata.com/#/" target="_blank" rel="noreferrer">iView</a>,<a href="https://didi.github.io/cube-ui/#/zh-CN" target="_blank" rel="noreferrer">Cube UI</a>，<a href="https://youzan.github.io/vant/#/zh-CN/" target="_blank" rel="noreferrer">Vant</a>,<a href="https://vuetifyjs.com/en/" target="_blank" rel="noreferrer">vuetify</a>，<a href="https://www.antdv.com/docs/vue/introduce-cn/" target="_blank" rel="noreferrer">Ant design</a></li><li>React: <a href="https://ant-design.gitee.io/docs/react/introduce-cn" target="_blank" rel="noreferrer">Ant design</a>，<a href="https://material-ui.com/zh/" target="_blank" rel="noreferrer">MATERIAL-UI</a>,<a href="https://chakra-ui.com/" target="_blank" rel="noreferrer">Chakra UI</a></li></ul><h3 id="_2-跨端开发" tabindex="-1">2. 跨端开发 <a class="header-anchor" href="#_2-跨端开发" aria-label="Permalink to &quot;2. 跨端开发&quot;">​</a></h3><p>一套代码，多端复用</p><p><strong>桌面应用</strong></p><ul><li><a href="https://www.electronjs.org/" target="_blank" rel="noreferrer">Electron</a></li><li><a href="https://flutter.dev/" target="_blank" rel="noreferrer">Flutter</a></li></ul><p><strong>移动应用</strong></p><table tabindex="0"><thead><tr><th style="text-align:center;">框架名称</th><th style="text-align:center;">IOS</th><th style="text-align:center;">Android</th><th style="text-align:center;">小程序</th><th style="text-align:center;">Web</th></tr></thead><tbody><tr><td style="text-align:center;"><a href="https://reactnative.cn/" target="_blank" rel="noreferrer">React Native</a></td><td style="text-align:center;">✅</td><td style="text-align:center;">✅</td><td style="text-align:center;">❌</td><td style="text-align:center;">✅</td></tr><tr><td style="text-align:center;"><a href="http://cordova.axuer.com/" target="_blank" rel="noreferrer">Cordova</a></td><td style="text-align:center;">✅</td><td style="text-align:center;">✅</td><td style="text-align:center;">❌</td><td style="text-align:center;">❌</td></tr><tr><td style="text-align:center;"><a href="https://uniapp.dcloud.io/" target="_blank" rel="noreferrer">uni-app</a></td><td style="text-align:center;">✅</td><td style="text-align:center;">✅</td><td style="text-align:center;">✅</td><td style="text-align:center;">✅</td></tr><tr><td style="text-align:center;"><a href="https://weex.apache.org/zh/" target="_blank" rel="noreferrer">Weex</a></td><td style="text-align:center;">✅</td><td style="text-align:center;">✅</td><td style="text-align:center;">❌</td><td style="text-align:center;">❌</td></tr><tr><td style="text-align:center;"><a href="https://rax.js.org/" target="_blank" rel="noreferrer">Rax</a></td><td style="text-align:center;">❌</td><td style="text-align:center;">❌</td><td style="text-align:center;">✅</td><td style="text-align:center;">✅</td></tr><tr><td style="text-align:center;"><a href="https://nervjs.github.io/taro/docs/README" target="_blank" rel="noreferrer">Taro</a></td><td style="text-align:center;">❌</td><td style="text-align:center;">❌</td><td style="text-align:center;">✅</td><td style="text-align:center;">✅</td></tr><tr><td style="text-align:center;"><a href="http://cml.didi.cn/" target="_blank" rel="noreferrer">Chameleon</a></td><td style="text-align:center;">❌</td><td style="text-align:center;">❌</td><td style="text-align:center;">✅</td><td style="text-align:center;">✅</td></tr><tr><td style="text-align:center;"><a href="https://github.com/Tencent/Hippy/blob/master/README.zh_CN.md" target="_blank" rel="noreferrer">Hippy</a></td><td style="text-align:center;">✅</td><td style="text-align:center;">✅</td><td style="text-align:center;">❌</td><td style="text-align:center;">✅</td></tr><tr><td style="text-align:center;"><a href="https://flutter.dev/" target="_blank" rel="noreferrer">Flutter</a></td><td style="text-align:center;">✅</td><td style="text-align:center;">✅</td><td style="text-align:center;">❌</td><td style="text-align:center;">✅</td></tr></tbody></table><h3 id="_3-游戏引擎" tabindex="-1">3. 游戏引擎 <a class="header-anchor" href="#_3-游戏引擎" aria-label="Permalink to &quot;3. 游戏引擎&quot;">​</a></h3><ul><li><a href="https://www.egret.com/" target="_blank" rel="noreferrer">egret-白鹭引擎</a></li><li><a href="https://www.layabox.com/" target="_blank" rel="noreferrer">LayaAir</a></li><li><a href="http://phaser.io/" target="_blank" rel="noreferrer">phaser</a></li><li><a href="http://hiloteam.github.io/index.html" target="_blank" rel="noreferrer">Hilo</a></li></ul><h3 id="_4-服务端开发-node-js" tabindex="-1">4. 服务端开发-<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noreferrer">Node.js</a> <a class="header-anchor" href="#_4-服务端开发-node-js" aria-label="Permalink to &quot;4. 服务端开发-[Node.js](https://nodejs.org/zh-cn/)&quot;">​</a></h3><ul><li><a href="https://expressjs.com/" target="_blank" rel="noreferrer">Express</a></li><li><a href="https://koajs.com/" target="_blank" rel="noreferrer">koa</a></li><li><a href="https://nestjs.com/" target="_blank" rel="noreferrer">Nest</a></li><li><a href="https://eggjs.org/zh-cn/" target="_blank" rel="noreferrer">egg</a></li></ul><h3 id="_5-数据可视化" tabindex="-1">5. 数据可视化 <a class="header-anchor" href="#_5-数据可视化" aria-label="Permalink to &quot;5. 数据可视化&quot;">​</a></h3><ul><li>相关技术：<a href="https://developer.mozilla.org/zh-CN/docs/Web/SVG" target="_blank" rel="noreferrer">SVG</a>,<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebGL_API" target="_blank" rel="noreferrer">Web GL</a>,<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API" target="_blank" rel="noreferrer">Canvas</a></li><li>可视化库：<a href="https://echarts.apache.org/zh/index.html" target="_blank" rel="noreferrer">echarts</a>,<a href="https://antv.vision/" target="_blank" rel="noreferrer">antv</a>,<a href="https://www.chartjs.org/" target="_blank" rel="noreferrer">Chart.js</a>,<a href="https://formidable.com/open-source/victory/" target="_blank" rel="noreferrer">VICTORY</a>...</li></ul><h3 id="_6-构建工具" tabindex="-1">6. 构建工具 <a class="header-anchor" href="#_6-构建工具" aria-label="Permalink to &quot;6. 构建工具&quot;">​</a></h3><ul><li><a href="https://www.webpackjs.com/" target="_blank" rel="noreferrer">webpack</a></li><li><a href="https://www.gulpjs.com.cn/" target="_blank" rel="noreferrer">glup</a></li><li><a href="https://www.gruntjs.net/" target="_blank" rel="noreferrer">grunt</a></li></ul><h3 id="_7-工程化中使用工具" tabindex="-1">7. 工程化中使用工具 <a class="header-anchor" href="#_7-工程化中使用工具" aria-label="Permalink to &quot;7. 工程化中使用工具&quot;">​</a></h3><ul><li><a href="https://www.babeljs.cn/" target="_blank" rel="noreferrer">Babel</a></li><li><a href="https://cn.eslint.org/" target="_blank" rel="noreferrer">Eslint</a></li></ul><h3 id="_8-度量监控" tabindex="-1">8. 度量监控 <a class="header-anchor" href="#_8-度量监控" aria-label="Permalink to &quot;8. 度量监控&quot;">​</a></h3><ul><li><a href="https://www.frontjs.com/" target="_blank" rel="noreferrer">frontjs</a></li><li><a href="https://www.fundebug.com/" target="_blank" rel="noreferrer">fundebug</a></li><li><a href="https://tongji.baidu.com/web/welcome/login" target="_blank" rel="noreferrer">百度统计</a></li><li><a href="https://marketingplatform.google.com/about/" target="_blank" rel="noreferrer">Google Analytics</a></li><li><a href="https://www.umeng.com/web" target="_blank" rel="noreferrer">CNZZ</a></li></ul><h3 id="_9-智能化" tabindex="-1">9. 智能化 <a class="header-anchor" href="#_9-智能化" aria-label="Permalink to &quot;9. 智能化&quot;">​</a></h3><ul><li><a href="https://www.imgcook.com/" target="_blank" rel="noreferrer">imgcook</a></li><li><a href="https://alibaba.github.io/pipcook/#/zh-cn/" target="_blank" rel="noreferrer">pipcook</a></li><li><a href="https://www.tensorflow.org/js?hl=zh-cn" target="_blank" rel="noreferrer">TensorFlow.js</a></li></ul><h3 id="其它-1" tabindex="-1">其它 <a class="header-anchor" href="#其它-1" aria-label="Permalink to &quot;其它&quot;">​</a></h3><ul><li><a href="https://www.tslang.cn/" target="_blank" rel="noreferrer">TypeScript</a></li><li>...</li></ul><p>TODO: 补充一张前端技术的思维导图</p><h2 id="参考资料" tabindex="-1">\b参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;\b参考资料&quot;">​</a></h2><ul><li><a href="https://www.yuque.com/robinson/fe-pro/gu001d" target="_blank" rel="noreferrer">语雀-分享狼叔关于《大前端工程化的实践与思考》</a></li></ul>',161),n=[i];function o(h,s,c,d,p,u){return t(),r("div",null,n)}const f=e(a,[["render",o]]);export{b as __pageData,f as default};
