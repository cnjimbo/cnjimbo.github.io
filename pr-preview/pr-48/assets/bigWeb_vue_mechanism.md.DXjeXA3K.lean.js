import{j as l,b as d,c as o,q as a,f as e,K as t,w as s,a7 as n,F as c}from"./chunks/framework.B0f4rbfy.js";const M=JSON.parse('{"title":"运行机制概述","description":"","frontmatter":{"sidebar":{"title":"❤运行机制概述","step":9},"isTimeLine":true,"title":"运行机制概述","date":"2020-04-14T00:00:00.000Z","tags":["大前端","vue"],"categories":["大前端"]},"headers":[],"relativePath":"bigWeb/vue/mechanism.md","filePath":"bigWeb/vue/mechanism.md","lastUpdated":1670770660000}'),r={name:"bigWeb/vue/mechanism.md"},h=n("",6),p=a("h3",{id:"parse",tabindex:"-1"},[e("parse "),a("a",{class:"header-anchor",href:"#parse","aria-label":'Permalink to "parse"'},"​")],-1),k=a("code",null,"解析",-1),u=a("h3",{id:"optimize",tabindex:"-1"},[e("optimize "),a("a",{class:"header-anchor",href:"#optimize","aria-label":'Permalink to "optimize"'},"​")],-1),g=a("code",null,"update",-1),E=a("code",null,"patch",-1),_=a("code",null,"diff",-1),m=a("code",null,"patch",-1),b=a("h3",{id:"generate",tabindex:"-1"},[e("generate "),a("a",{class:"header-anchor",href:"#generate","aria-label":'Permalink to "generate"'},"​")],-1),f=a("code",null,"AST",-1),y=a("code",null,"render function",-1),v=a("code",null,"parse",-1),V=a("code",null,"optimize",-1),x=a("code",null,"generate",-1),T=a("code",null,"render function",-1),D=n("",16);function N(P,A,C,F,S,q){const i=c("word");return d(),o("div",null,[h,a("p",null,[e("compile编译分为 "),t(i,{title:"解析"},{default:s(()=>[e("parse")]),_:1}),e(",")]),t(i,{title:"优化"},{default:s(()=>[e("optimize")]),_:1}),e(","),t(i,{title:"生成"},{default:s(()=>[e("generate")]),_:1}),e("三个阶段，最终需要得到 "),t(i,{title:"渲染函数"},{default:s(()=>[e("render function")]),_:1}),p,a("p",null,[e("使用正则表达式等方式"),k,e("Template模板中的指令,class,style等等数据,形成"),t(i,{title:"Abstract Syntax Tree",content:"抽象语法树"},{default:s(()=>[e("AST")]),_:1})]),u,a("p",null,[e("optimize 的主要作用是"),t(i,{content:"这是 Vue 在编译过程中的一处优化"},{default:s(()=>[e("标记 static 静态节点")]),_:1}),e("，当 "),g,e(" 更新界面时，会有一个 "),E,e(" 的过程， "),_,e(" 算法会直接跳过静态节点，从而减少了比较的过程，优化了 "),m,e(" 的性能")]),b,a("p",null,[e("generate 是将 "),f,e(" 转化成 "),y,e(" 字符串的过程，得到结果是 render 的字符串以及 "),t(i,{title:"静态Render",content:"静态 render 其实跟 render 是一样的，都是执行得到 Vnode,只是静态 render，没有绑定动态数据，即说不会变化"},{default:s(()=>[e("staticRenderFns")]),_:1}),e("字符串。")]),a("p",null,[e("在经历过 "),v,e(","),V,e(","),x,e("这三个阶段以后，组件中就会存在渲染 "),t(i,{title:"Virtual DOM",content:"虚拟DOM是JavaScript对象"},{default:s(()=>[e("VNode")]),_:1}),e(" 所需的 "),T,e(" 了")]),D])}const z=l(r,[["render",N]]);export{M as __pageData,z as default};
