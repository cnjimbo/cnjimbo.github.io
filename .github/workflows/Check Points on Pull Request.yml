# Simple workflow for deploying static content to GitHub Pages
name: Check Points on Pull Request

on:
  # Runs on pushes targeting the default branch

  pull_request:
    branches: [main, master]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # 默认只拉取分支最近一次的 commit，可能会导致一些文章的 GitInfo 变量无法获取，设为 0 代表拉取所有分支所有提交
          fetch-depth: 0
      - name: Git Configuration
        # 2、配置 Git
        run: |
          git config --global core.quotePath false
          git config --global core.autocrlf false
          git config --global core.safecrlf true
          git config --global core.ignorecase false

      - name: Setup PNPM
        # 3、安装 PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node
        # 4、安装 Node 环境
        uses: actions/setup-node@v4.0.1
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org
          cache: pnpm

      - name: Install Dependencies
        run: |
          pnpm install
          # if [ -f pnpm-lock.yaml ]; then
          #   pnpm install --frozen-lockfile
          # else
          #   pnpm install
          # fi

      - name: Buildlib
        # 6、打包
        run: pnpm buildlib
      - name: Build
        run: pnpm build
